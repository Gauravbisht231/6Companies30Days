class Solution {
    // At this point of time, I do not have any intution for this question, and formual is also not derived by me.
public:
    int maxRotateFunction(vector<int>& nums) {
        int n= nums.size();
         int sum=0, current=0, maxi=0;
        if(n==1 or n==0) return 0;
        //  A formula is derived, which kind of works as prefix sum
        // formula: current ( sum for a given roatation)= current + (sumof(nums)- nums[i])- (n-1)*nums[i].  This formula is derived when looped from end 
       
        //current is the sum of (index*element of that index) of  the array nums
        for(auto i=0; i<n; i++){
            sum+=nums[i];
            current+=i*nums[i]; 
        }
        maxi= current;
        for(int i=n-1; i>=0; i--){
            current= current +(sum-nums[i])- (n-1)*nums[i];
            maxi= max(maxi, current);
        }
        return maxi;
    }
};
